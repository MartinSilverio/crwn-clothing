{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MartinS\\\\Documents\\\\ReactProject\\\\crwn-clothing\\\\client\\\\src\\\\pages\\\\shop\\\\Shop.js\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverviewContainer';\nimport CollectionPageContainer from '../collection/CollectionPageContainer';\nimport { fetchCollectionsStart } from '../../redux/shop/shopActions';\n\nfunction Shop({\n  match,\n  fetchCollectionsStart\n}) {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(Shop); // componentDidMount() {\n// const { updateCollections } = this.props;\n// const collectionRef = firestore.collection('collections');\n// Promise style access to snapshot, but is not live like the observable pattern\n// collectionRef.get().then((snapshot) => {\n//   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//   console.log(collectionsMap);\n//   updateCollections(collectionsMap);\n//   this.setState({ loading: false });\n// })\n// Fetch method for getting data\n// fetch(\n//   'https://firestore.googleapis.com/v1/projects/crwn-db-2976e/databases/(default)/documents/collections'\n// )\n//   .then((response) => response.json())\n//   .then((collections) => console.log(collections));\n// collectionRef.onSnapshot(async (snapshot) => {\n//   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//   console.log(collectionsMap);\n//   updateCollections(collectionsMap);\n//   this.setState({ loading: false });\n// });\n// }","map":{"version":3,"sources":["C:/Users/MartinS/Documents/ReactProject/crwn-clothing/client/src/pages/shop/Shop.js"],"names":["React","useEffect","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStart","Shop","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,4BAAP,MAAyC,oEAAzC;AACA,OAAOC,uBAAP,MAAoC,uCAApC;AAEA,SAASC,qBAAT,QAAsC,8BAAtC;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAd,EAAgD;AAC9CL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFtB;AAGE,IAAA,SAAS,EAAEL,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,gBADtB;AAEE,IAAA,SAAS,EAAEJ,uBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAaD;;AAED,MAAMK,kBAAkB,GAAIC,QAAD,KAAe;AACxCL,EAAAA,qBAAqB,EAAE,MAAMK,QAAQ,CAACL,qBAAqB,EAAtB;AADG,CAAf,CAA3B;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOO,kBAAP,CAAP,CAAkCH,IAAlC,CAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/CollectionsOverviewContainer';\r\nimport CollectionPageContainer from '../collection/CollectionPageContainer';\r\n\r\nimport { fetchCollectionsStart } from '../../redux/shop/shopActions';\r\n\r\nfunction Shop({ match, fetchCollectionsStart }) {\r\n  useEffect(() => {\r\n    fetchCollectionsStart();\r\n  }, [fetchCollectionsStart]);\r\n\r\n  return (\r\n    <div className='shop-page'>\r\n      <Route\r\n        exact\r\n        path={`${match.path}`}\r\n        component={CollectionsOverviewContainer}\r\n      />\r\n      <Route\r\n        path={`${match.path}/:collectionId`}\r\n        component={CollectionPageContainer}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Shop);\r\n\r\n// componentDidMount() {\r\n// const { updateCollections } = this.props;\r\n// const collectionRef = firestore.collection('collections');\r\n// Promise style access to snapshot, but is not live like the observable pattern\r\n// collectionRef.get().then((snapshot) => {\r\n//   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n//   console.log(collectionsMap);\r\n//   updateCollections(collectionsMap);\r\n//   this.setState({ loading: false });\r\n// })\r\n// Fetch method for getting data\r\n// fetch(\r\n//   'https://firestore.googleapis.com/v1/projects/crwn-db-2976e/databases/(default)/documents/collections'\r\n// )\r\n//   .then((response) => response.json())\r\n//   .then((collections) => console.log(collections));\r\n// collectionRef.onSnapshot(async (snapshot) => {\r\n//   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n//   console.log(collectionsMap);\r\n//   updateCollections(collectionsMap);\r\n//   this.setState({ loading: false });\r\n// });\r\n\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}